Run in a local environment using docker
docker compose up 
- Refer image 1

Task 1 - Create an article (Refer image 2)
curl --location 'http://localhost:8080/articles' \
--header 'Content-Type: application/json' \
--data '{
    "title": "Hello World",
    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
    "author": "John"
}'

Task 2 - Get article by id (Refer image 3)
curl --location 'http://localhost:8080/articles/1' \
--data ''

Task 3 - Get all article (Refer image 4)
curl --location 'http://localhost:8080/articles' \
--data ''

Test coverage
go test ./... -cover
?       backend [no test files]
?       backend/pkg/const       [no test files]
?       backend/pkg/models      [no test files]
ok      backend/api     (cached)                       coverage: 86.2% of statements
ok      backend/pkg/db  (cached)                       coverage: 91.7% of statements
?       backend/pkg/repository  [no test files]
ok      backend/pkg/repository/dbrepo   (cached)       coverage: 87.2% of statements
ok      backend/pkg/utility     (cached)               coverage: 86.7% of statements

Clean code / Development practice followed with separate busines logic, db, utility, models, constatnts, db query etc
.
├── api
│   ├── handlers.go
│   ├── handler_test.go
│   ├── router_test.go
│   └── routes.go
├── docker-compose.yml
├── Dockerfile
├── go.mod
├── go.sum
├── main.go
├── pkg
│   ├── const
│   │   └── constant.go
│   ├── db
│   │   ├── db.go
│   │   └── db_test.go
│   ├── models
│   │   └── articles.go
│   ├── repository
│   │   ├── dbrepo
│   │   │   ├── postgres_dbrepo.go
│   │   │   └── postgres_dbrepo_test.go
│   │   └── repository.go
│   └── utility
│       ├── utils.go
│       └── utils_test.go
└── readme

Docker run (Refer image 1)
 - Created the docker and docker compose file to run the go code and databse into the separate container